// // App.js
// import React from "react";
// import Deck from "./Deck";
// import "./style.css";

// export default function App() {
//   return (
//     <div className="App">
//       <h1>Card Dealer</h1>
//       <Deck />
//     </div>
//   );
// }
// // Deck.js
// import React, { useState } from "react";
// import Card from "./Card";

// const generateDeck = () => {
//   const suits = ["Hearts", "Diamonds", "Clubs", "Spades"];
//   const ranks = [
//     "Ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King"
//   ];

//   const newDeck = [];

//   suits.forEach((suit) => {
//     ranks.forEach((rank) => {
//       newDeck.push(`${rank} of ${suit}`);
//     });
//   });

//   return newDeck;
// };

// const Deck = () => {
//   const [deck, setDeck] = useState(generateDeck());
//   const [cards, setCards] = useState([]);

//   const drawCards = () => {
//     const drawnCards = [];

//     for (let i = 0; i < 5; i++) {
//       if (deck.length > 0) {
//         const randomIndex = Math.floor(Math.random() * deck.length);
//         drawnCards.push(deck[randomIndex]);
//         deck.splice(randomIndex, 1);
//       }
//     }

//     setCards(drawnCards);
//   };

//   const resetDeck = () => {
//     // setDeck(generateDeck());
//     setCards([]);
//   };

//   return (
//     <div>
//       <div>
//         <button onClick={drawCards}>Draw Cards</button>
//         <button onClick={resetDeck}>Reset Deck</button>
//       </div>
//       <div>
//         {cards.map((card, index) => (
//           <Card key={index} card={card} />
//         ))}
//       </div>
//     </div>
//   );
// };

// export default Deck;
// import React from "react";
// export default function Card({card}){
//   return(
//     <div>
//                            {card}

//       </div>
//   )
// }


import React, { useState } from 'react';

function CardGenerator() {
  const [cards, setCards] = useState([]);

  // Function to generate 5 random cards
  const generateCards = () => {
    const suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];
    const ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace'];

    const generatedCards = [];
    for (let i = 0; i < 5; i++) {
      const suit = suits[Math.floor(Math.random() * suits.length)];
      const rank = ranks[Math.floor(Math.random() * ranks.length)];
      generatedCards.push({ suit, rank });
    }

    setCards(generatedCards);
  };

  return (
    <div>
      <h1>Card Generator</h1>
      <button onClick={generateCards}>Generate Cards</button>
      <div style={{ marginTop: '20px' }}>
        {cards.map((card, index) => (
          <div key={index} style={{ marginBottom: '10px' }}>
            <span>{card.rank} of {card.suit}</span>
          </div>
        ))}
      </div>
    </div>
  );
}

export default CardGenerator;




// import React, { useState } from 'react';

// function Login({ onLogin }) {
//   const [username, setUsername] = useState('');
//   const [password, setPassword] = useState('');
//   const [error, setError] = useState('');

//   const handleLogin = async (e) => {
//     e.preventDefault();
//     try {
//       const response = await fetch('https://jsonplaceholder.typicode.com/posts', { // Replace with your actual URL
//         method: 'POST',
//         headers: {
//           'Content-Type': 'application/json'
//         },
//         body: JSON.stringify({ username, password })
//       });

//       if (!response.ok) {
//         throw new Error('Login failed');
//       }

//       const data = await response.json();
//       onLogin(data.token); // Pass the token to the parent component
//     } catch (error) {
//       setError('Login failed. Please try again.'); // Update error state
//       console.error('Login failed:', error);
//     }
//   };

//   return (
//     <div>
//       {error && <p>{error}</p>} {/* Display error message if present */}
//       <form onSubmit={handleLogin}>
//         <input type="text" placeholder="Username" value={username} onChange={(e) => setUsername(e.target.value)} />
//         <input type="password" placeholder="Password" value={password} onChange={(e) => setPassword(e.target.value)} />
//         <button type="submit">Login</button>
//       </form>
//     </div>
//   );
// }

// export default Login;


// import React, { useState } from 'react';
// // import Login from './Login';

// function App() {
//   const [token, setToken] = useState('');

//   const handleLogin = (newToken) => {
//     setToken(newToken);
//   };

//   return (
//     <div>
//       {token ? (
//         <div>
//           <h2>Welcome!</h2>
//           <p>Your JWT: {token}</p>
//         </div>
//       ) : (
//         <Login onLogin={handleLogin} />
//       )}
//     </div>
//   );
// }

// export default App;


